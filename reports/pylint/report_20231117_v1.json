[
    {
        "type": "warning",
        "module": "data.extract_data",
        "obj": "extract_data",
        "line": 44,
        "column": 12,
        "endLine": 44,
        "endColumn": 21,
        "path": "src\\data\\extract_data.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'tracks_df'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "models.clustering",
        "obj": "clustering",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 14,
        "path": "src\\models\\clustering.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "models.clustering",
        "obj": "clustering",
        "line": 35,
        "column": 4,
        "endLine": 35,
        "endColumn": 21,
        "path": "src\\models\\clustering.py",
        "symbol": "invalid-name",
        "message": "Variable name \"OUTPUT_TRAIN_FILE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "models.clustering",
        "obj": "clustering",
        "line": 36,
        "column": 4,
        "endLine": 36,
        "endColumn": 20,
        "path": "src\\models\\clustering.py",
        "symbol": "invalid-name",
        "message": "Variable name \"OUTPUT_TEST_FILE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "models.metrics",
        "obj": "metrics",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 11,
        "path": "src\\models\\metrics.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "models.metrics",
        "obj": "metrics",
        "line": 42,
        "column": 4,
        "endLine": 42,
        "endColumn": 12,
        "path": "src\\models\\metrics.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'accuracy' from outer scope (line 65)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "models.metrics",
        "obj": "metrics",
        "line": 26,
        "column": 4,
        "endLine": 26,
        "endColumn": 23,
        "path": "src\\models\\metrics.py",
        "symbol": "invalid-name",
        "message": "Variable name \"CORRECT_PREDICTIONS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "models.metrics",
        "obj": "metrics",
        "line": 40,
        "column": 20,
        "endLine": 40,
        "endColumn": 39,
        "path": "src\\models\\metrics.py",
        "symbol": "invalid-name",
        "message": "Variable name \"CORRECT_PREDICTIONS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "models.metrics",
        "obj": "metrics",
        "line": 24,
        "column": 4,
        "endLine": 24,
        "endColumn": 10,
        "path": "src\\models\\metrics.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'fdbk_2'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "models.metrics",
        "obj": "log_experiments",
        "line": 47,
        "column": 0,
        "endLine": 47,
        "endColumn": 19,
        "path": "src\\models\\metrics.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "models.metrics",
        "obj": "log_experiments",
        "line": 47,
        "column": 20,
        "endLine": 47,
        "endColumn": 28,
        "path": "src\\models\\metrics.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'accuracy' from outer scope (line 65)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "models.recommend",
        "obj": "recommend",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 13,
        "path": "src\\models\\recommend.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "models.recommend",
        "obj": "recommend",
        "line": 98,
        "column": 4,
        "endLine": 98,
        "endColumn": 15,
        "path": "src\\models\\recommend.py",
        "symbol": "invalid-name",
        "message": "Variable name \"RECOMM_PATH\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_files_utilities",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 18,
        "path": "src\\tests\\pytest\\test_files_utilities.py",
        "symbol": "invalid-name",
        "message": "Constant name \"stored_playlist_id\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_files_utilities",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 22,
        "path": "src\\tests\\pytest\\test_files_utilities.py",
        "symbol": "invalid-name",
        "message": "Constant name \"not_stored_playlist_id\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "tests.pytest.test_files_utilities",
        "obj": "test_store_playlist_dataframe",
        "line": 61,
        "column": 4,
        "endLine": 61,
        "endColumn": 82,
        "path": "src\\tests\\pytest\\test_files_utilities.py",
        "symbol": "assignment-from-no-return",
        "message": "Assigning result of a function call, where the function has no return",
        "message-id": "E1111"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_preprocessing",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "src\\tests\\pytest\\test_preprocessing.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_preprocessing",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "src\\tests\\pytest\\test_preprocessing.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_preprocessing",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "src\\tests\\pytest\\test_preprocessing.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_preprocessing",
        "obj": "",
        "line": 44,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "src\\tests\\pytest\\test_preprocessing.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_recommend",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "src\\tests\\pytest\\test_recommend.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_recommend",
        "obj": "test_euclidean_distance",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 27,
        "path": "src\\tests\\pytest\\test_recommend.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_recommend",
        "obj": "test_five_recommended_songs",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 31,
        "path": "src\\tests\\pytest\\test_recommend.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_spotipy_utilities",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "src\\tests\\pytest\\test_spotipy_utilities.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_spotipy_utilities",
        "obj": "",
        "line": 53,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "src\\tests\\pytest\\test_spotipy_utilities.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.pytest.test_spotipy_utilities",
        "obj": "",
        "line": 64,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "src\\tests\\pytest\\test_spotipy_utilities.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    }
]
